name: xgo

on:
  push:
    tags:
      - '*'
jobs:
  xgo:
    runs-on: ubuntu-latest
    steps:
      - name: Version
        uses: bhowell2/github-substring-action@v1.0.0
        id: version
        with:
          value: ${{ github.ref_name }}
          index_of_str: "v"
          length_from_end: 0
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        uses: crazy-max/ghaction-xgo@v2
        with:
          buildmode: default
          dest: build
          go_version: 1.18
          ldflags: -s -w
          pkg: cmd
          prefix: gitall-${{ steps.version.outputs.substring }}
          race: false
          targets: linux/amd64,linux/arm64,darwin/arm64,darwin/amd64
          trimpath: true
          v: true
          x: false
          xgo_version: latest
      - name: Compress
        run: for FILE in ${{ github.workspace }}/build/* ; do tar -zcvf $FILE.tar.gz $FILE ; done
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*
      - name: Release my project to my Homebrew tap
        uses: Justintime50/homebrew-releaser@v1
        with:
          # The name of the homebrew tap to publish your formula to as it appears on GitHub.
          homebrew_owner: jkassis
          homebrew_tap: homebrew-keg

          # The name of the folder in your homebrew tap where formula will be committed to.
          formula_folder: /

          # The GitHub Token (saved as a repo secret) that has `repo` permissions for the homebrew tap you want to release to.
          # Required - string.
          github_token: ${{ secrets.KEG_GITHUB_TOKEN }}

          # Git author info used to commit to the homebrew tap.
          # Defaults are shown - strings.
          commit_owner: homebrew-releaser
          commit_email: homebrew-releaser@example.com

          # Custom install command for your formula.
          # Required - string.
          install: 'bin.install "gitall"'

          # Adds URL and checksum targets for different OS and architecture pairs. Using this option assumes
          # a tar archive exists on your GitHub repo with the following URL pattern (this cannot be customized):
          # https://github.com/{GITHUB_OWNER}/{REPO_NAME}/releases/download/{TAG}/{REPO_NAME}-{VERSION}-{OPERATING_SYSTEM}-{ARCHITECTURE}.tar.gz'
          # Darwin AMD pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-darwin-amd64.tar.gz
          # Linux ARM pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-linux-arm64.tar.gz
          # Optional - booleans.
          target_darwin_amd64: true
          target_darwin_arm64: true
          # these two are not working right now
          # target_linux_amd64: true
          # target_linux_arm64: true

          # Update your homebrew tap's README with a table of all projects in the tap.
          # This is done by pulling the information from all your formula.rb files - eg:
          #
          # | Project                                    | Description  | Install                  |
          # | ------------------------------------------ | ------------ | ------------------------ |
          # | [formula_1](https://github.com/user/repo1) | helpful text | `brew install formula_1` |
          # | [formula_2](https://github.com/user/repo2) | helpful text | `brew install formula_2` |
          # | [formula_3](https://github.com/user/repo3) | helpful text | `brew install formula_3` |
          #
          # Simply place the following in your README or wrap your project in these comment tags:
          # <!-- project_table_start -->
          # TABLE HERE
          # <!--project_table_end -->
          #
          # Finally, mark `update_readme_table` as `true` in your GitHub Action config and we'll do the work of building a custom table for you.
          # Default is `false` - boolean.
          update_readme_table: true

          # Skips committing the generated formula to a homebrew tap (useful for local testing).
          # Default is shown - boolean.
          skip_commit: false

          # Logs debugging info to console.
          # Default is shown - boolean.
          debug: false
